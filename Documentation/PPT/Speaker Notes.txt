Slide 1 Project Details - Prinkal
    Good Morning to one and all present here! Myself Prinkal Doshi from 6th Semester IT Department along with my fellow teammates
    Mihir, Sarid, Tanay and Arsh are here to present our final year project STAMP which is suite of software and hardware solution for
    security and surveillance operations. Our guide for the project is Mr Abhijit Sir and I would like to take a moment to thank him 
    for his contribution

Slide 2 Introduction - Arsh
    Drones, drones, drones! We hear about them all the time. They seem to be everywhere in our society, our communities, and even on 
    social media. Over the past decade, drones have become a buzzword, representing the cutting-edge technology of the future.
    This drone technology has its application emcompasses a broad spectrum from, Agriculture to photography and even Security and 
    Surveillance. STAMP is highly focused on expanding the potential of drone technology in the domain of security and surveillance 

Slide 3 Problem Statement - Arsh
    Arsh explain mumbai police example you gave
    Imparting the knowledge from the example I gave STAMP aims to provide additional and easy to use software suite of components
    which will help in disaster management and surveillance operations also providing security utilities to end users with drone 
    technology

Slide 4 Diagram of Web Application hierarchy - Prinkal
    STAMP emcompasses of a web application created using React Framework and Chakra UI which binds all the software components in a single 
    place. The React web application is divided mainly into 8 Components

    Home – Basic Overview of Project along with description of features and components used
    STAMP Support – End-to-end messaging components enabled with AI and features to communicate with drone remotely via MSP Protocol
    Security – Includes components to train model with faces for Haar Cascade Face recognition algorithm [6].
    Surveillance – Includes Yolo Object Detection algorithm with COCO Dataset loaded with 80 object categories [5].
    Gallery – Includes all the achievements and participation in Project Competitions.
    Gesture Control – Remotely Control drone via hand gesture recognition model build with tensorflow, keras and mediapipe.
    About Us – Includes summary of project along with project details and contact us module connected to AWS Cloud
    Settings – Remotely Configure Drone via Web Application for optimizing drone health and monitoring drone state


Slide 5 Face Recognition Working - Mihir
    Mihir kar dega

Slide 6 Object Detection Working - Sarid
    The above diagram represents the working of Object Detection module of STAMP [5].

    1. User will upload the video file he/she wants to analyze to the STAMP Web Application.
    2. The video file is feed to yolo object detection model via flask api.
    3. The Model is trained with the coco dataset mapping and creating boxes of each object detected in each frame of video file.
    4. The video file is uploaded to cloud and report is generated and mailed to the end user.

Slide 7 Hand Detection working - Mihir
    Mihir kar dega

Slide 8 Drone Programming - Arsh 

Slide 9 MSP Protocol - Mihir
    Mihir kar dega

Slide 10 STAMP Support - Tanay
    Stamp Support is an AI based web chat application developed to foster the needs of cognitive thinking integrated with drone technology.
    Stamp support also provides and admin side to control the drone remotely via text commands over the wifi through msp Protocol.
    The AI based chat support enables communication on a peer to peer basis for example end users like hostages in disaster communicating 
    to the admin drone pilot that is the rescuers.

Slide 11 Gallery - Tanay
    Over the course of 16 Weeks we are proud to announce that we were successfull in representing our project in 4 project Competitions
    namely 

    ciia exhibition in which Mihir and Prinkal participated and were selected among the top 100 teams from individual

    SPIT Innovation Cup in which myself arsh prinkal and Mihir participated and qualified for the second round from the three rounds of the 
    Competitions

    Kjsce Prakalpa wherein myself mihir prinkal and sarid participated and demonstrated our project among the selected 30 teams

    and lastly thanks to ABhijit sir for the drone workshop conducted by drona aviation and our college SBMP

Slide 12 Cloud Integration - Sarid

    The above diagram represents the cloud architecture applied to STAMP with its implementation and working with the end 
    users and servers [7].

    AWS Simple Storage Service (S3) : It contains all the output files of face recognition and object detection algorithm along 
    with emails.txt and details.json which are generated by AWS SNS and AWS DynamoDB.

    AWS Simple Notification Service (SNS) : It contains the pub/sub model for STAMP Web application for end users to subscribe 
    to our newsletter for further updates and notification about our project

    AWS DynamoDB : It contains two NOSQL database tables namely stamp contact us and stamp details.json holding values of 
    users who want to contact us and review our project and record of face recognition algorithm.


Slide 13 Objective of Project - Mihir
    As mentioned in our course objective for the final year project , it specifies the use of practical implementation of all the 
    subjects which were taught by our IT department facilities. Along with that the course objective specifies the cumulative 
    understanding and development of project not as an individual but as a team. Myself as the the Team Leader i feel priviliged to work
    with such a good team. Here are the subjects which played a huge role in the development of STAMP 
    I will explain few of these

Slide 14 Future Scope - Arsh

Slide 15 SDLC and Workflow - Sarid
    As we saw in the course objective the main aim of final year project is to teach each and every one of us how to work in a team 
    collaboratively. For STAMP we followed the agile development model of software engineering with continuous integration and continuous
    developemnt of operations maintained by different softwares. Github, Clickup, Figma, Amazon Web Services are the few notable resources
    we used. 

 
